//sieve precompute the smallest prime factor of the no
// Time Complexity for sieve is 0(nlog(log(n))
const int n=1e7;
int a[n+1]={0};
vector<int>  v;
void primefac()
{
        for(int i=0;i<=n;i++)
            a[i]=i;
        for(int i=2;i<=n;i++)
        {
            if(a[i]==i){
           for(int j=i*i;j<=n;j=j+i){
                    if(a[j]==j)
                    a[j]=i;
            }
            }}
}
// taking t queries and for each query storing its prine factor in a set and printing it
//Its Time Complexity will be O(T*log2(N))
void main(){
        primefac();
        int t=1;
        cin>>t;
        while(t--){
        int n;
        cin>>n;
        set<int> s;
        while(n!=1){
          s.insert(a[n]);
          n=n/a[n];   
        }
        }
